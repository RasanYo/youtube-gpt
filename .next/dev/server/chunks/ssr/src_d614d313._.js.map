{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/button.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { Slot } from '@radix-ui/react-slot'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary text-primary-foreground hover:bg-primary/90',\n        destructive:\n          'bg-destructive text-destructive-foreground hover:bg-destructive/90',\n        outline:\n          'border border-input bg-background hover:bg-accent hover:text-accent-foreground',\n        secondary:\n          'bg-secondary text-secondary-foreground hover:bg-secondary/80',\n        ghost: 'hover:bg-accent hover:text-accent-foreground',\n        link: 'text-primary underline-offset-4 hover:underline',\n      },\n      size: {\n        default: 'h-10 px-4 py-2',\n        sm: 'h-9 rounded-md px-3',\n        lg: 'h-11 rounded-md px-8',\n        icon: 'h-10 w-10',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'default',\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : 'button'\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AACA;AAEA;AALA;;;;;;AAOA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,0XAAgB,CAC7B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,6SAAI,GAAG;IAC9B,qBACE,qZAAC;QACC,WAAW,IAAA,yHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/avatar.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport * as AvatarPrimitive from '@radix-ui/react-avatar'\n\nimport { cn } from '@/lib/utils'\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      'relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full',\n      className,\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn('aspect-square h-full w-full', className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      'flex h-full w-full items-center justify-center rounded-full bg-muted',\n      className,\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n"],"names":[],"mappings":";;;;;;;;;AACA;AACA;AAEA;AAJA;;;;;AAMA,MAAM,uBAAS,0XAAgB,CAG7B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,2XAAoB;QACnB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,iEACA;QAED,GAAG,KAAK;;;;;;AAGb,OAAO,WAAW,GAAG,2XAAoB,CAAC,WAAW;AAErD,MAAM,4BAAc,0XAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,4XAAqB;QACpB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,+BAA+B;QAC5C,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,4XAAqB,CAAC,WAAW;AAE3D,MAAM,+BAAiB,0XAAgB,CAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC,+XAAwB;QACvB,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,wEACA;QAED,GAAG,KAAK;;;;;;AAGb,eAAe,WAAW,GAAG,+XAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ThemeToggle.tsx"],"sourcesContent":["'use client'\n\nimport { Moon, Sun } from 'lucide-react'\nimport { useEffect, useState } from 'react'\nimport { Button } from '@/components/ui/button'\n\nexport const ThemeToggle = () => {\n  const [theme, setTheme] = useState<'light' | 'dark'>('light')\n\n  useEffect(() => {\n    const stored = localStorage.getItem('bravi_theme') as\n      | 'light'\n      | 'dark'\n      | null\n    const initial = stored || 'light'\n    setTheme(initial)\n    document.documentElement.classList.toggle('dark', initial === 'dark')\n  }, [])\n\n  const toggleTheme = () => {\n    const newTheme = theme === 'light' ? 'dark' : 'light'\n    setTheme(newTheme)\n    localStorage.setItem('bravi_theme', newTheme)\n    document.documentElement.classList.toggle('dark', newTheme === 'dark')\n  }\n\n  return (\n    <Button\n      variant=\"ghost\"\n      size=\"icon\"\n      onClick={toggleTheme}\n      className=\"h-9 w-9\"\n    >\n      {theme === 'light' ? (\n        <Moon className=\"h-4 w-4\" />\n      ) : (\n        <Sun className=\"h-4 w-4\" />\n      )}\n      <span className=\"sr-only\">Toggle theme</span>\n    </Button>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AACA;AACA;AAJA;;;;;AAMO,MAAM,cAAc;IACzB,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,wXAAQ,EAAmB;IAErD,IAAA,yXAAS,EAAC;QACR,MAAM,SAAS,aAAa,OAAO,CAAC;QAIpC,MAAM,UAAU,UAAU;QAC1B,SAAS;QACT,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,YAAY;IAChE,GAAG,EAAE;IAEL,MAAM,cAAc;QAClB,MAAM,WAAW,UAAU,UAAU,SAAS;QAC9C,SAAS;QACT,aAAa,OAAO,CAAC,eAAe;QACpC,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,aAAa;IACjE;IAEA,qBACE,qZAAC,4IAAM;QACL,SAAQ;QACR,MAAK;QACL,SAAS;QACT,WAAU;;YAET,UAAU,wBACT,qZAAC,8RAAI;gBAAC,WAAU;;;;;yEAEhB,qZAAC,2RAAG;gBAAC,WAAU;;;;;;0BAEjB,qZAAC;gBAAK,WAAU;0BAAU;;;;;;;;;;;;AAGhC","debugId":null}},
    {"offset": {"line": 183, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/scroll-area.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport * as ScrollAreaPrimitive from '@radix-ui/react-scroll-area'\n\nimport { cn } from '@/lib/utils'\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn('relative overflow-hidden', className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = 'vertical', ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      'flex touch-none select-none transition-colors',\n      orientation === 'vertical' &&\n        'h-full w-2.5 border-l border-l-transparent p-[1px]',\n      orientation === 'horizontal' &&\n        'h-2.5 flex-col border-t border-t-transparent p-[1px]',\n      className,\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;AAJA;;;;;AAMA,MAAM,2BAAa,0XAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,qZAAC,mYAAwB;QACvB,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,4BAA4B;QACzC,GAAG,KAAK;;0BAET,qZAAC,uYAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,qZAAC;;;;;0BACD,qZAAC,qYAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,mYAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,0XAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,qZAAC,kZAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,IAAA,yHAAE,EACX,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,qZAAC,8YAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,kZAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 251, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/separator.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport * as SeparatorPrimitive from '@radix-ui/react-separator'\n\nimport { cn } from '@/lib/utils'\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = 'horizontal', decorative = true, ...props },\n    ref,\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        'shrink-0 bg-border',\n        orientation === 'horizontal' ? 'h-[1px] w-full' : 'h-full w-[1px]',\n        className,\n      )}\n      {...props}\n    />\n  ),\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;AAJA;;;;;AAMA,MAAM,0BAAY,0XAAgB,CAIhC,CACE,EAAE,SAAS,EAAE,cAAc,YAAY,EAAE,aAAa,IAAI,EAAE,GAAG,OAAO,EACtE,oBAEA,qZAAC,8XAAuB;QACtB,KAAK;QACL,YAAY;QACZ,aAAa;QACb,WAAW,IAAA,yHAAE,EACX,sBACA,gBAAgB,eAAe,mBAAmB,kBAClD;QAED,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG,8XAAuB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ConversationSidebar.tsx"],"sourcesContent":["'use client'\n\nimport { MessageSquare, LogOut, Plus } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar'\nimport { ThemeToggle } from './ThemeToggle'\nimport { useAuth } from '@/contexts/AuthContext'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Separator } from '@/components/ui/separator'\n\nexport const ConversationSidebar = () => {\n  const { user, logout } = useAuth()\n\n  // Empty conversations array to show empty state\n  const conversations: Array<{ id: number; title: string; date: string }> = []\n\n  return (\n    <div className=\"flex h-screen w-64 flex-col border-r bg-sidebar\">\n      {/* Header with New Chat Button */}\n      <div className=\"flex h-14 items-center justify-between border-b px-4\">\n        <h2 className=\"text-sm font-semibold text-sidebar-foreground\">\n          Conversations\n        </h2>\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          className=\"h-8 w-8\"\n          title=\"New Chat\"\n        >\n          <Plus className=\"h-4 w-4\" />\n        </Button>\n      </div>\n\n      {/* Conversations List */}\n      <ScrollArea className=\"flex-1 p-2\">\n        {conversations.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-full text-center px-4 py-8\">\n            <MessageSquare className=\"h-12 w-12 text-muted-foreground/50 mb-3\" />\n            <p className=\"text-sm text-muted-foreground mb-1 font-medium\">\n              No conversations yet\n            </p>\n            <p className=\"text-xs text-muted-foreground/70\">\n              Start a new chat to begin\n            </p>\n          </div>\n        ) : (\n          <div className=\"space-y-1\">\n            {conversations.map((conv) => (\n              <Button\n                key={conv.id}\n                variant=\"ghost\"\n                className=\"w-full justify-start text-left h-auto py-3 px-3\"\n              >\n                <div className=\"flex items-start gap-2 w-full\">\n                  <MessageSquare className=\"h-4 w-4 mt-0.5 flex-shrink-0 text-muted-foreground\" />\n                  <div className=\"flex-1 min-w-0\">\n                    <div className=\"text-sm font-medium truncate text-sidebar-foreground\">\n                      {conv.title}\n                    </div>\n                    <div className=\"text-xs text-muted-foreground\">\n                      {conv.date}\n                    </div>\n                  </div>\n                </div>\n              </Button>\n            ))}\n          </div>\n        )}\n      </ScrollArea>\n\n      {/* Profile Section */}\n      <div className=\"border-t bg-sidebar-accent/50\">\n        <Separator />\n        <div className=\"p-4 space-y-3\">\n          <div className=\"flex items-center gap-3\">\n            <Avatar className=\"h-9 w-9\">\n              <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                {user?.email?.charAt(0).toUpperCase() || 'U'}\n              </AvatarFallback>\n            </Avatar>\n            <div className=\"flex-1 min-w-0\">\n              <p className=\"text-sm font-medium truncate text-sidebar-foreground\">\n                {user?.email?.split('@')[0]}\n              </p>\n              <p className=\"text-xs text-muted-foreground truncate\">\n                {user?.email}\n              </p>\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-2\">\n            <ThemeToggle />\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              onClick={logout}\n              className=\"flex-1 justify-start\"\n            >\n              <LogOut className=\"h-4 w-4 mr-2\" />\n              Logout\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAUO,MAAM,sBAAsB;IACjC,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,IAAA,0IAAO;IAEhC,gDAAgD;IAChD,MAAM,gBAAoE,EAAE;IAE5E,qBACE,qZAAC;QAAI,WAAU;;0BAEb,qZAAC;gBAAI,WAAU;;kCACb,qZAAC;wBAAG,WAAU;kCAAgD;;;;;;kCAG9D,qZAAC,4IAAM;wBACL,SAAQ;wBACR,MAAK;wBACL,WAAU;wBACV,OAAM;kCAEN,cAAA,qZAAC,8RAAI;4BAAC,WAAU;;;;;;;;;;;;;;;;;0BAKpB,qZAAC,wJAAU;gBAAC,WAAU;0BACnB,cAAc,MAAM,KAAK,kBACxB,qZAAC;oBAAI,WAAU;;sCACb,qZAAC,6TAAa;4BAAC,WAAU;;;;;;sCACzB,qZAAC;4BAAE,WAAU;sCAAiD;;;;;;sCAG9D,qZAAC;4BAAE,WAAU;sCAAmC;;;;;;;;;;;6EAKlD,qZAAC;oBAAI,WAAU;8BACZ,cAAc,GAAG,CAAC,CAAC,qBAClB,qZAAC,4IAAM;4BAEL,SAAQ;4BACR,WAAU;sCAEV,cAAA,qZAAC;gCAAI,WAAU;;kDACb,qZAAC,6TAAa;wCAAC,WAAU;;;;;;kDACzB,qZAAC;wCAAI,WAAU;;0DACb,qZAAC;gDAAI,WAAU;0DACZ,KAAK,KAAK;;;;;;0DAEb,qZAAC;gDAAI,WAAU;0DACZ,KAAK,IAAI;;;;;;;;;;;;;;;;;;2BAXX,KAAK,EAAE;;;;;;;;;;;;;;;0BAsBtB,qZAAC;gBAAI,WAAU;;kCACb,qZAAC,kJAAS;;;;;kCACV,qZAAC;wBAAI,WAAU;;0CACb,qZAAC;gCAAI,WAAU;;kDACb,qZAAC,4IAAM;wCAAC,WAAU;kDAChB,cAAA,qZAAC,oJAAc;4CAAC,WAAU;sDACvB,MAAM,OAAO,OAAO,GAAG,iBAAiB;;;;;;;;;;;kDAG7C,qZAAC;wCAAI,WAAU;;0DACb,qZAAC;gDAAE,WAAU;0DACV,MAAM,OAAO,MAAM,IAAI,CAAC,EAAE;;;;;;0DAE7B,qZAAC;gDAAE,WAAU;0DACV,MAAM;;;;;;;;;;;;;;;;;;0CAKb,qZAAC;gCAAI,WAAU;;kDACb,qZAAC,gJAAW;;;;;kDACZ,qZAAC,4IAAM;wCACL,SAAQ;wCACR,MAAK;wCACL,SAAS;wCACT,WAAU;;0DAEV,qZAAC,wSAAM;gDAAC,WAAU;;;;;;4CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQjD","debugId":null}},
    {"offset": {"line": 556, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/input.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<'input'>>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  },\n)\nInput.displayName = 'Input'\n\nexport { Input }\n"],"names":[],"mappings":";;;;;AACA;AAEA;AAHA;;;;AAKA,MAAM,sBAAQ,0XAAgB,CAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,qZAAC;QACC,MAAM;QACN,WAAW,IAAA,yHAAE,EACX,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 585, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ChatArea.tsx"],"sourcesContent":["'use client'\n\nimport { Send, MessageCircle, Sparkles } from 'lucide-react'\nimport { Button } from '@/components/ui/button'\nimport { Input } from '@/components/ui/input'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Avatar, AvatarFallback } from '@/components/ui/avatar'\n\nexport const ChatArea = () => {\n  // Empty messages array to show empty state\n  const messages: Array<{\n    id: number\n    role: string\n    content: string\n  }> = []\n\n  return (\n    <div className=\"flex h-screen flex-1 flex-col\">\n      {/* Header */}\n      <div className=\"flex h-14 items-center border-b px-6\">\n        <h1 className=\"text-lg font-semibold\">Bravi AI Assistant</h1>\n      </div>\n\n      {/* Messages */}\n      <ScrollArea className=\"flex-1 p-6\">\n        {messages.length === 0 ? (\n          <div className=\"flex flex-col items-center justify-center h-full text-center px-4\">\n            <div className=\"relative mb-6\">\n              <MessageCircle className=\"h-16 w-16 text-muted-foreground/30\" />\n              <Sparkles className=\"h-6 w-6 text-primary absolute -top-1 -right-1\" />\n            </div>\n            <h2 className=\"text-2xl font-semibold mb-2 text-foreground\">\n              Welcome to Bravi AI\n            </h2>\n            <p className=\"text-muted-foreground mb-6 max-w-md\">\n              Your intelligent YouTube assistant. Ask me anything about your\n              videos, content strategy, or get insights from your knowledge base.\n            </p>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3 max-w-2xl w-full\">\n              <div className=\"p-4 rounded-lg border bg-card hover:bg-accent/50 transition-colors cursor-pointer text-left\">\n                <p className=\"text-sm font-medium mb-1\">Analyze Video Performance</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Get insights on views, engagement, and audience retention\n                </p>\n              </div>\n              <div className=\"p-4 rounded-lg border bg-card hover:bg-accent/50 transition-colors cursor-pointer text-left\">\n                <p className=\"text-sm font-medium mb-1\">Content Strategy Ideas</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Discover trending topics and optimization tips\n                </p>\n              </div>\n              <div className=\"p-4 rounded-lg border bg-card hover:bg-accent/50 transition-colors cursor-pointer text-left\">\n                <p className=\"text-sm font-medium mb-1\">SEO Optimization</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Improve titles, descriptions, and tags for better reach\n                </p>\n              </div>\n              <div className=\"p-4 rounded-lg border bg-card hover:bg-accent/50 transition-colors cursor-pointer text-left\">\n                <p className=\"text-sm font-medium mb-1\">Audience Insights</p>\n                <p className=\"text-xs text-muted-foreground\">\n                  Understand your viewers and grow your channel\n                </p>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"space-y-6 max-w-3xl mx-auto\">\n            {messages.map((message) => (\n              <div\n                key={message.id}\n                className={`flex gap-3 ${\n                  message.role === 'user' ? 'justify-end' : 'justify-start'\n                }`}\n              >\n                {message.role === 'assistant' && (\n                  <Avatar className=\"h-8 w-8 flex-shrink-0\">\n                    <AvatarFallback className=\"bg-primary text-primary-foreground\">\n                      B\n                    </AvatarFallback>\n                  </Avatar>\n                )}\n                <div\n                  className={`rounded-lg px-4 py-3 max-w-[80%] ${\n                    message.role === 'user'\n                      ? 'bg-primary text-primary-foreground'\n                      : 'bg-muted'\n                  }`}\n                >\n                  <p className=\"text-sm\">{message.content}</p>\n                </div>\n                {message.role === 'user' && (\n                  <Avatar className=\"h-8 w-8 flex-shrink-0\">\n                    <AvatarFallback className=\"bg-secondary\">U</AvatarFallback>\n                  </Avatar>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </ScrollArea>\n\n      {/* Input */}\n      <div className=\"border-t p-4\">\n        <div className=\"max-w-3xl mx-auto\">\n          <form className=\"flex gap-2\">\n            <Input placeholder=\"Ask Bravi anything...\" className=\"flex-1\" />\n            <Button type=\"submit\" size=\"icon\">\n              <Send className=\"h-4 w-4\" />\n              <span className=\"sr-only\">Send message</span>\n            </Button>\n          </form>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":";;;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AANA;;;;;;;AAQO,MAAM,WAAW;IACtB,2CAA2C;IAC3C,MAAM,WAID,EAAE;IAEP,qBACE,qZAAC;QAAI,WAAU;;0BAEb,qZAAC;gBAAI,WAAU;0BACb,cAAA,qZAAC;oBAAG,WAAU;8BAAwB;;;;;;;;;;;0BAIxC,qZAAC,wJAAU;gBAAC,WAAU;0BACnB,SAAS,MAAM,KAAK,kBACnB,qZAAC;oBAAI,WAAU;;sCACb,qZAAC;4BAAI,WAAU;;8CACb,qZAAC,6TAAa;oCAAC,WAAU;;;;;;8CACzB,qZAAC,0SAAQ;oCAAC,WAAU;;;;;;;;;;;;sCAEtB,qZAAC;4BAAG,WAAU;sCAA8C;;;;;;sCAG5D,qZAAC;4BAAE,WAAU;sCAAsC;;;;;;sCAInD,qZAAC;4BAAI,WAAU;;8CACb,qZAAC;oCAAI,WAAU;;sDACb,qZAAC;4CAAE,WAAU;sDAA2B;;;;;;sDACxC,qZAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;8CAI/C,qZAAC;oCAAI,WAAU;;sDACb,qZAAC;4CAAE,WAAU;sDAA2B;;;;;;sDACxC,qZAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;8CAI/C,qZAAC;oCAAI,WAAU;;sDACb,qZAAC;4CAAE,WAAU;sDAA2B;;;;;;sDACxC,qZAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;8CAI/C,qZAAC;oCAAI,WAAU;;sDACb,qZAAC;4CAAE,WAAU;sDAA2B;;;;;;sDACxC,qZAAC;4CAAE,WAAU;sDAAgC;;;;;;;;;;;;;;;;;;;;;;;6EAOnD,qZAAC;oBAAI,WAAU;8BACZ,SAAS,GAAG,CAAC,CAAC,wBACb,qZAAC;4BAEC,WAAW,CAAC,WAAW,EACrB,QAAQ,IAAI,KAAK,SAAS,gBAAgB,iBAC1C;;gCAED,QAAQ,IAAI,KAAK,6BAChB,qZAAC,4IAAM;oCAAC,WAAU;8CAChB,cAAA,qZAAC,oJAAc;wCAAC,WAAU;kDAAqC;;;;;;;;;;;8CAKnE,qZAAC;oCACC,WAAW,CAAC,iCAAiC,EAC3C,QAAQ,IAAI,KAAK,SACb,uCACA,YACJ;8CAEF,cAAA,qZAAC;wCAAE,WAAU;kDAAW,QAAQ,OAAO;;;;;;;;;;;gCAExC,QAAQ,IAAI,KAAK,wBAChB,qZAAC,4IAAM;oCAAC,WAAU;8CAChB,cAAA,qZAAC,oJAAc;wCAAC,WAAU;kDAAe;;;;;;;;;;;;2BAvBxC,QAAQ,EAAE;;;;;;;;;;;;;;;0BAiCzB,qZAAC;gBAAI,WAAU;0BACb,cAAA,qZAAC;oBAAI,WAAU;8BACb,cAAA,qZAAC;wBAAK,WAAU;;0CACd,qZAAC,0IAAK;gCAAC,aAAY;gCAAwB,WAAU;;;;;;0CACrD,qZAAC,4IAAM;gCAAC,MAAK;gCAAS,MAAK;;kDACzB,qZAAC,8RAAI;wCAAC,WAAU;;;;;;kDAChB,qZAAC;wCAAK,WAAU;kDAAU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOxC","debugId":null}},
    {"offset": {"line": 916, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/lib/youtube/detector.ts"],"sourcesContent":["/**\n * YouTube URL type detector\n * Detects whether a YouTube URL is a video, channel, or playlist\n */\n\nexport interface YoutubeUrlInfo {\n    type: 'video' | 'channel' | 'unknown';\n    id: string | null;\n  }\n  \n  export function detectYouTubeType(url: string): YoutubeUrlInfo {\n    try {\n      const urlObject = new URL(url);\n      const hostname = urlObject.hostname;\n      const pathname = urlObject.pathname;\n      const searchParams = urlObject.searchParams;\n  \n      // Détection des URL de vidéo\n      if (hostname === 'www.youtube.com' || hostname === 'youtube.com') {\n        // Cas de l'URL watch?v=\n        if (pathname === '/watch') {\n          const videoId = searchParams.get('v');\n          if (videoId) {\n            return { type: 'video', id: videoId };\n          }\n        }\n        // Cas de l'URL shorts/\n        if (pathname.startsWith('/shorts/')) {\n          const videoId = pathname.substring('/shorts/'.length);\n           // Basic validation for shorts ID length (usually 11 characters)\n          if (videoId && videoId.length >= 11) {\n               // You might want more robust validation here\n               return { type: 'video', id: videoId };\n          }\n        }\n         // Cas de l'URL embed/ (souvent utilisé pour les intégrations)\n         if (pathname.startsWith('/embed/')) {\n             const videoId = pathname.substring('/embed/'.length);\n              // Basic validation for embed ID length (usually 11 characters)\n             if (videoId && videoId.length >= 11) {\n                 // You might want more robust validation here\n                 return { type: 'video', id: videoId };\n             }\n         }\n      } else if (hostname === 'youtu.be') {\n        // Cas de l'URL youtu.be/\n        const videoId = pathname.substring(1); // Enlève le premier '/'\n         // Basic validation for youtu.be ID length (usually 11 characters)\n        if (videoId && videoId.length >= 11) {\n             // You might want more robust validation here\n             return { type: 'video', id: videoId };\n        }\n      }\n  \n      // Détection des URL de chaîne\n      if (hostname === 'www.youtube.com' || hostname === 'youtube.com') {\n        const pathnameParts = pathname.split('/').filter(part => part !== ''); // Divise et enlève les parties vides\n  \n        // Cas de l'URL /channel/\n        if (pathnameParts[0] === 'channel' && pathnameParts.length > 1) {\n          const channelId = pathnameParts[1];\n          // Basic validation for channel ID (starts with UC)\n          if (channelId && channelId.startsWith('UC')) {\n               // You might want more robust validation here\n               return { type: 'channel', id: channelId };\n          }\n        }\n        // Cas de l'URL /user/ (legacy)\n        if (pathnameParts[0] === 'user' && pathnameParts.length > 1) {\n            const username = pathnameParts[1];\n            // Pour les URL /user/ ou /@handle, on ne peut pas obtenir l'ID directement.\n            // On retourne le type et le nom/handle pour une recherche ultérieure via l'API.\n            return { type: 'channel', id: username }; // Ici, l'ID est en fait le nom d'utilisateur\n        }\n         // Cas de l'URL /@handle (plus récent)\n         if (pathnameParts[0] && pathnameParts[0].startsWith('@') && pathnameParts.length > 0) {\n             const handle = pathnameParts[0];\n             // Pour les URL /user/ ou /@handle, on ne peut pas obtenir l'ID directement.\n             // On retourne le type et le nom/handle pour une recherche ultérieure via l'API.\n             return { type: 'channel', id: handle }; // Ici, l'ID est en fait le handle\n         }\n      }\n  \n      // Si aucun type connu n'est détecté\n      return { type: 'unknown', id: null };\n  \n    } catch (error) {\n      console.error(\"Erreur lors de l'analyse de l'URL :\", error);\n      return { type: 'unknown', id: null };\n    }\n  }\n  "],"names":[],"mappings":"AAAA;;;CAGC;;;;AAOQ,SAAS,kBAAkB,GAAW;IAC3C,IAAI;QACF,MAAM,YAAY,IAAI,IAAI;QAC1B,MAAM,WAAW,UAAU,QAAQ;QACnC,MAAM,WAAW,UAAU,QAAQ;QACnC,MAAM,eAAe,UAAU,YAAY;QAE3C,6BAA6B;QAC7B,IAAI,aAAa,qBAAqB,aAAa,eAAe;YAChE,wBAAwB;YACxB,IAAI,aAAa,UAAU;gBACzB,MAAM,UAAU,aAAa,GAAG,CAAC;gBACjC,IAAI,SAAS;oBACX,OAAO;wBAAE,MAAM;wBAAS,IAAI;oBAAQ;gBACtC;YACF;YACA,uBAAuB;YACvB,IAAI,SAAS,UAAU,CAAC,aAAa;gBACnC,MAAM,UAAU,SAAS,SAAS,CAAC,WAAW,MAAM;gBACnD,gEAAgE;gBACjE,IAAI,WAAW,QAAQ,MAAM,IAAI,IAAI;oBAChC,6CAA6C;oBAC7C,OAAO;wBAAE,MAAM;wBAAS,IAAI;oBAAQ;gBACzC;YACF;YACC,8DAA8D;YAC9D,IAAI,SAAS,UAAU,CAAC,YAAY;gBAChC,MAAM,UAAU,SAAS,SAAS,CAAC,UAAU,MAAM;gBAClD,+DAA+D;gBAChE,IAAI,WAAW,QAAQ,MAAM,IAAI,IAAI;oBACjC,6CAA6C;oBAC7C,OAAO;wBAAE,MAAM;wBAAS,IAAI;oBAAQ;gBACxC;YACJ;QACH,OAAO,IAAI,aAAa,YAAY;YAClC,yBAAyB;YACzB,MAAM,UAAU,SAAS,SAAS,CAAC,IAAI,wBAAwB;YAC9D,kEAAkE;YACnE,IAAI,WAAW,QAAQ,MAAM,IAAI,IAAI;gBAChC,6CAA6C;gBAC7C,OAAO;oBAAE,MAAM;oBAAS,IAAI;gBAAQ;YACzC;QACF;QAEA,8BAA8B;QAC9B,IAAI,aAAa,qBAAqB,aAAa,eAAe;YAChE,MAAM,gBAAgB,SAAS,KAAK,CAAC,KAAK,MAAM,CAAC,CAAA,OAAQ,SAAS,KAAK,qCAAqC;YAE5G,yBAAyB;YACzB,IAAI,aAAa,CAAC,EAAE,KAAK,aAAa,cAAc,MAAM,GAAG,GAAG;gBAC9D,MAAM,YAAY,aAAa,CAAC,EAAE;gBAClC,mDAAmD;gBACnD,IAAI,aAAa,UAAU,UAAU,CAAC,OAAO;oBACxC,6CAA6C;oBAC7C,OAAO;wBAAE,MAAM;wBAAW,IAAI;oBAAU;gBAC7C;YACF;YACA,+BAA+B;YAC/B,IAAI,aAAa,CAAC,EAAE,KAAK,UAAU,cAAc,MAAM,GAAG,GAAG;gBACzD,MAAM,WAAW,aAAa,CAAC,EAAE;gBACjC,4EAA4E;gBAC5E,gFAAgF;gBAChF,OAAO;oBAAE,MAAM;oBAAW,IAAI;gBAAS,GAAG,6CAA6C;YAC3F;YACC,sCAAsC;YACtC,IAAI,aAAa,CAAC,EAAE,IAAI,aAAa,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,cAAc,MAAM,GAAG,GAAG;gBAClF,MAAM,SAAS,aAAa,CAAC,EAAE;gBAC/B,4EAA4E;gBAC5E,gFAAgF;gBAChF,OAAO;oBAAE,MAAM;oBAAW,IAAI;gBAAO,GAAG,kCAAkC;YAC9E;QACH;QAEA,oCAAoC;QACpC,OAAO;YAAE,MAAM;YAAW,IAAI;QAAK;IAErC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uCAAuC;QACrD,OAAO;YAAE,MAAM;YAAW,IAAI;QAAK;IACrC;AACF","debugId":null}},
    {"offset": {"line": 1030, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/lib/supabase/auth.ts"],"sourcesContent":["/**\n * Authentication Helper Functions\n *\n * Centralized authentication operations for the YouTube GPT application.\n * These helpers wrap Supabase Auth methods with consistent error handling\n * and configuration.\n */\n\nimport { supabase } from './client'\n\n/**\n * Send a magic link to the user's email for passwordless authentication\n *\n * @param email - User's email address\n * @returns Promise that resolves when magic link is sent\n * @throws Error if email sending fails\n *\n * @example\n * ```typescript\n * try {\n *   await signInWithMagicLink('user@example.com');\n *   // Show success message: \"Check your email for the magic link\"\n * } catch (error) {\n *   // Handle error: \"Failed to send magic link\"\n * }\n * ```\n */\nexport async function signInWithMagicLink(email: string) {\n  const { data, error } = await supabase.auth.signInWithOtp({\n    email,\n    options: {\n      emailRedirectTo: `${window.location.origin}/`,\n    },\n  })\n\n  if (error) throw error\n  return data\n}\n\n/**\n * Sign out the current user and clear their session\n *\n * @returns Promise that resolves when user is signed out\n * @throws Error if sign out fails\n *\n * @example\n * ```typescript\n * try {\n *   await signOut();\n *   // Redirect to login page\n * } catch (error) {\n *   // Handle error: \"Failed to sign out\"\n * }\n * ```\n */\nexport async function signOut() {\n  const { error } = await supabase.auth.signOut()\n  if (error) throw error\n}\n\n/**\n * Get the current authenticated user\n *\n * This method verifies the user's JWT token and returns fresh user data.\n * Use this when you need to verify authentication status programmatically.\n *\n * @returns Promise that resolves with the current user or null\n * @throws Error if token validation fails\n *\n * @example\n * ```typescript\n * try {\n *   const user = await getCurrentUser();\n *   if (user) {\n *     console.log('Authenticated as:', user.email);\n *   } else {\n *     console.log('Not authenticated');\n *   }\n * } catch (error) {\n *   // Handle error: \"Failed to get user\"\n * }\n * ```\n */\nexport async function getCurrentUser() {\n  const {\n    data: { user },\n    error,\n  } = await supabase.auth.getUser()\n\n  if (error) throw error\n  return user\n}\n\n/**\n * Get the current session\n *\n * This returns the cached session from localStorage without validating\n * the JWT token. Use this for quick auth checks.\n *\n * @returns Promise that resolves with the current session or null\n *\n * @example\n * ```typescript\n * const session = await getCurrentSession();\n * if (session) {\n *   console.log('Session expires at:', session.expires_at);\n * }\n * ```\n */\nexport async function getCurrentSession() {\n  const {\n    data: { session },\n  } = await supabase.auth.getSession()\n\n  return session\n}\n"],"names":[],"mappings":"AAAA;;;;;;CAMC;;;;;;;;;;AAED;;AAmBO,eAAe,oBAAoB,KAAa;IACrD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,4IAAQ,CAAC,IAAI,CAAC,aAAa,CAAC;QACxD;QACA,SAAS;YACP,iBAAiB,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;QAC/C;IACF;IAEA,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAkBO,eAAe;IACpB,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,4IAAQ,CAAC,IAAI,CAAC,OAAO;IAC7C,IAAI,OAAO,MAAM;AACnB;AAyBO,eAAe;IACpB,MAAM,EACJ,MAAM,EAAE,IAAI,EAAE,EACd,KAAK,EACN,GAAG,MAAM,4IAAQ,CAAC,IAAI,CAAC,OAAO;IAE/B,IAAI,OAAO,MAAM;IACjB,OAAO;AACT;AAkBO,eAAe;IACpB,MAAM,EACJ,MAAM,EAAE,OAAO,EAAE,EAClB,GAAG,MAAM,4IAAQ,CAAC,IAAI,CAAC,UAAU;IAElC,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1075, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/lib/youtube/api.ts"],"sourcesContent":["import { detectYouTubeType, type YoutubeUrlInfo } from './detector'\nimport { type VideoMetadata, type ChannelMetadata, type YouTubeProcessResult } from './types'\nimport { getCurrentUser } from '../supabase/auth'\nimport { supabase } from '../supabase/client'\n\n/**\n * Process a YouTube URL and extract video ID\n * This function validates the URL and extracts the video ID for further processing\n */\nexport async function processYouTubeUrl(url: string): Promise<YouTubeProcessResult> {\n  try {\n    // Validate URL format\n    if (!url || typeof url !== 'string') {\n      return {\n        success: false,\n        error: 'Invalid URL: URL must be a non-empty string',\n        type: 'invalid'\n      }\n    }\n\n    // Detect YouTube URL type and extract ID\n    const urlInfo: YoutubeUrlInfo = detectYouTubeType(url)\n    \n    if (urlInfo.type === 'unknown' || !urlInfo.id) {\n      return {\n        success: false,\n        error: 'Invalid YouTube URL: URL must be a valid YouTube video or channel URL',\n        type: 'invalid'\n      }\n    }\n\n    // Get current authenticated user\n    let user\n    try {\n      user = await getCurrentUser()\n      if (!user) {\n        return {\n          success: false,\n          error: 'User must be authenticated to process YouTube URLs',\n          type: 'auth_required'\n        }\n      }\n    } catch (authError) {\n      console.error('Authentication error:', authError)\n      return {\n        success: false,\n        error: 'Authentication failed. Please sign in and try again.',\n        type: 'auth_error'\n      }\n    }\n\n    // Log the URL and ID for debugging\n    console.log('YouTube URL received:', url)\n    console.log('Extracted ID:', urlInfo.id)\n    console.log('URL type:', urlInfo.type)\n    console.log('User ID:', user.id)\n\n    // Call Supabase Edge function to create video record\n    try {\n      const { data, error } = await supabase.functions.invoke('fetch-video-metadata', {\n        body: {\n          id: urlInfo.id,\n          type: urlInfo.type,\n          userId: user.id\n        }\n      })\n\n      if (error) {\n        console.error('Edge function error:', error)\n        return {\n          success: false,\n          error: 'Failed to queue video for processing. Please try again.',\n          type: 'processing_error'\n        }\n      }\n\n      if (!data.success) {\n        console.error('Edge function returned error:', data.error)\n        return {\n          success: false,\n          error: data.error || 'Failed to queue video for processing.',\n          type: 'processing_error'\n        }\n      }\n\n      console.log(`Successfully submitted ${urlInfo.type} for processing:`, urlInfo.id)\n      console.log('Video ID:', data.videoId)\n    } catch (edgeFunctionError) {\n      console.error('Edge function call failed:', edgeFunctionError)\n      \n      // Handle specific errors\n      let errorMessage = 'Failed to submit video for processing. Please try again.'\n      if (edgeFunctionError instanceof Error) {\n        if (edgeFunctionError.message.includes('network') || edgeFunctionError.message.includes('timeout')) {\n          errorMessage = 'Service temporarily unavailable. Please try again in a moment.'\n        } else if (edgeFunctionError.message.includes('unauthorized')) {\n          errorMessage = 'Service authentication failed. Please contact support.'\n        }\n      }\n      \n      return {\n        success: false,\n        error: errorMessage,\n        type: 'processing_error'\n      }\n    }\n\n    // Return success with basic info\n    return {\n      success: true,\n      data: {\n        id: urlInfo.id,\n        type: urlInfo.type\n      } as unknown as VideoMetadata | ChannelMetadata, // We'll improve this when we add full metadata fetching\n      type: urlInfo.type === 'video' ? 'video' : 'channel'\n    }\n\n  } catch (error) {\n    console.error('Error processing YouTube URL:', error)\n    return {\n      success: false,\n      error: error instanceof Error ? error.message : 'Unknown error occurred',\n      type: 'invalid'\n    }\n  }\n}\n\n/**\n * Get video metadata from YouTube API\n * This is a placeholder for future implementation\n */\nexport async function getVideoMetadata(videoId: string): Promise<VideoMetadata | null> {\n  // TODO: Implement YouTube API integration\n  console.log('Getting video metadata for ID:', videoId)\n  return null\n}\n\n/**\n * Get channel metadata from YouTube API\n * This is a placeholder for future implementation\n */\nexport async function getChannelMetadata(channelId: string): Promise<ChannelMetadata | null> {\n  // TODO: Implement YouTube API integration\n  console.log('Getting channel metadata for ID:', channelId)\n  return null\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AAEA;AACA;;;;AAMO,eAAe,kBAAkB,GAAW;IACjD,IAAI;QACF,sBAAsB;QACtB,IAAI,CAAC,OAAO,OAAO,QAAQ,UAAU;YACnC,OAAO;gBACL,SAAS;gBACT,OAAO;gBACP,MAAM;YACR;QACF;QAEA,yCAAyC;QACzC,MAAM,UAA0B,IAAA,sJAAiB,EAAC;QAElD,IAAI,QAAQ,IAAI,KAAK,aAAa,CAAC,QAAQ,EAAE,EAAE;YAC7C,OAAO;gBACL,SAAS;gBACT,OAAO;gBACP,MAAM;YACR;QACF;QAEA,iCAAiC;QACjC,IAAI;QACJ,IAAI;YACF,OAAO,MAAM,IAAA,gJAAc;YAC3B,IAAI,CAAC,MAAM;gBACT,OAAO;oBACL,SAAS;oBACT,OAAO;oBACP,MAAM;gBACR;YACF;QACF,EAAE,OAAO,WAAW;YAClB,QAAQ,KAAK,CAAC,yBAAyB;YACvC,OAAO;gBACL,SAAS;gBACT,OAAO;gBACP,MAAM;YACR;QACF;QAEA,mCAAmC;QACnC,QAAQ,GAAG,CAAC,yBAAyB;QACrC,QAAQ,GAAG,CAAC,iBAAiB,QAAQ,EAAE;QACvC,QAAQ,GAAG,CAAC,aAAa,QAAQ,IAAI;QACrC,QAAQ,GAAG,CAAC,YAAY,KAAK,EAAE;QAE/B,qDAAqD;QACrD,IAAI;YACF,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,4IAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,wBAAwB;gBAC9E,MAAM;oBACJ,IAAI,QAAQ,EAAE;oBACd,MAAM,QAAQ,IAAI;oBAClB,QAAQ,KAAK,EAAE;gBACjB;YACF;YAEA,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,wBAAwB;gBACtC,OAAO;oBACL,SAAS;oBACT,OAAO;oBACP,MAAM;gBACR;YACF;YAEA,IAAI,CAAC,KAAK,OAAO,EAAE;gBACjB,QAAQ,KAAK,CAAC,iCAAiC,KAAK,KAAK;gBACzD,OAAO;oBACL,SAAS;oBACT,OAAO,KAAK,KAAK,IAAI;oBACrB,MAAM;gBACR;YACF;YAEA,QAAQ,GAAG,CAAC,CAAC,uBAAuB,EAAE,QAAQ,IAAI,CAAC,gBAAgB,CAAC,EAAE,QAAQ,EAAE;YAChF,QAAQ,GAAG,CAAC,aAAa,KAAK,OAAO;QACvC,EAAE,OAAO,mBAAmB;YAC1B,QAAQ,KAAK,CAAC,8BAA8B;YAE5C,yBAAyB;YACzB,IAAI,eAAe;YACnB,IAAI,6BAA6B,OAAO;gBACtC,IAAI,kBAAkB,OAAO,CAAC,QAAQ,CAAC,cAAc,kBAAkB,OAAO,CAAC,QAAQ,CAAC,YAAY;oBAClG,eAAe;gBACjB,OAAO,IAAI,kBAAkB,OAAO,CAAC,QAAQ,CAAC,iBAAiB;oBAC7D,eAAe;gBACjB;YACF;YAEA,OAAO;gBACL,SAAS;gBACT,OAAO;gBACP,MAAM;YACR;QACF;QAEA,iCAAiC;QACjC,OAAO;YACL,SAAS;YACT,MAAM;gBACJ,IAAI,QAAQ,EAAE;gBACd,MAAM,QAAQ,IAAI;YACpB;YACA,MAAM,QAAQ,IAAI,KAAK,UAAU,UAAU;QAC7C;IAEF,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;YACL,SAAS;YACT,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;YAChD,MAAM;QACR;IACF;AACF;AAMO,eAAe,iBAAiB,OAAe;IACpD,0CAA0C;IAC1C,QAAQ,GAAG,CAAC,kCAAkC;IAC9C,OAAO;AACT;AAMO,eAAe,mBAAmB,SAAiB;IACxD,0CAA0C;IAC1C,QAAQ,GAAG,CAAC,oCAAoC;IAChD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 1208, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/lib/youtube/index.ts"],"sourcesContent":["// Export all YouTube utilities from a single entry point\nexport { detectYouTubeType, type YoutubeUrlInfo } from './detector'\nexport { processYouTubeUrl, getVideoMetadata, getChannelMetadata } from './api'\nexport { type VideoMetadata, type ChannelMetadata, type YouTubeProcessResult } from './types'\n"],"names":[],"mappings":"AAAA,yDAAyD;;AACzD;AACA","debugId":null}},
    {"offset": {"line": 1218, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/alert.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst alertVariants = cva(\n  'relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground',\n  {\n    variants: {\n      variant: {\n        default: 'bg-background text-foreground',\n        destructive:\n          'border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n    },\n  },\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = 'Alert'\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn('mb-1 font-medium leading-none tracking-tight', className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = 'AlertTitle'\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('text-sm [&_p]:leading-relaxed', className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = 'AlertDescription'\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;;;;AACA;AACA;AAEA;AAJA;;;;;AAMA,MAAM,gBAAgB,IAAA,kPAAG,EACvB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,0XAAgB,CAG5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,qZAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,IAAA,yHAAE,EAAC,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,0XAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,0XAAgB,CAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1284, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/card.tsx"],"sourcesContent":["'use client'\nimport * as React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      'rounded-lg border bg-card text-card-foreground shadow-sm',\n      className,\n    )}\n    {...props}\n  />\n))\nCard.displayName = 'Card'\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex flex-col space-y-1.5 p-6', className)}\n    {...props}\n  />\n))\nCardHeader.displayName = 'CardHeader'\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      'text-2xl font-semibold leading-none tracking-tight',\n      className,\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = 'CardTitle'\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn('text-sm text-muted-foreground', className)}\n    {...props}\n  />\n))\nCardDescription.displayName = 'CardDescription'\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn('p-6 pt-0', className)} {...props} />\n))\nCardContent.displayName = 'CardContent'\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn('flex items-center p-6 pt-0', className)}\n    {...props}\n  />\n))\nCardFooter.displayName = 'CardFooter'\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA;AAEA;AAHA;;;;AAKA,MAAM,qBAAO,0XAAgB,CAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,0XAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,0XAAgB,CAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EACX,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,0XAAgB,CAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,0XAAgB,CAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QAAI,KAAK;QAAK,WAAW,IAAA,yHAAE,EAAC,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,0XAAgB,CAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,qZAAC;QACC,KAAK;QACL,WAAW,IAAA,yHAAE,EAAC,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 1370, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/ui/skeleton.tsx"],"sourcesContent":["'use client'\nimport { cn } from '@/lib/utils'\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn('animate-pulse rounded-md bg-muted', className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n"],"names":[],"mappings":";;;;;AACA;AADA;;;AAGA,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OACkC;IACrC,qBACE,qZAAC;QACC,WAAW,IAAA,yHAAE,EAAC,qCAAqC;QAClD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 1394, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/VideoCard.tsx"],"sourcesContent":["'use client'\n\nimport { Card, CardContent, CardHeader } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar'\nimport { Skeleton } from '@/components/ui/skeleton'\nimport { Button } from '@/components/ui/button'\nimport { Tooltip, TooltipContent, TooltipProvider, TooltipTrigger } from '@/components/ui/tooltip'\nimport { Loader2, AlertCircle, Check, Clock, Video as VideoIcon } from 'lucide-react'\nimport { cn } from '@/lib/utils'\nimport { Video, VideoStatus } from '@/lib/supabase/types'\n\nexport type ProcessingStatus = 'pending' | 'queued' | 'processing' | 'ready' | 'failed'\n\n// Helper function to convert database status to UI status\nconst convertStatus = (dbStatus: VideoStatus | null): ProcessingStatus => {\n  if (!dbStatus) return 'pending'\n  return dbStatus.toLowerCase() as ProcessingStatus\n}\n\n// Helper function to format duration from seconds to MM:SS\nconst formatDuration = (seconds: number | null): string | null => {\n  if (!seconds) return null\n  const mins = Math.floor(seconds / 60)\n  const secs = seconds % 60\n  return `${mins}:${secs.toString().padStart(2, '0')}`\n}\n\nexport interface VideoCardProps {\n  video: Video\n  onClick?: (videoId: string) => void\n  onRetry?: (videoId: string) => void\n  className?: string\n}\n\nconst statusConfig = {\n  pending: {\n    variant: 'outline' as const,\n    icon: Clock,\n    label: 'Pending',\n    color: 'text-yellow-600'\n  },\n  queued: {\n    variant: 'secondary' as const,\n    icon: Loader2,\n    label: 'Queued',\n    color: 'text-muted-foreground'\n  },\n  processing: {\n    variant: 'default' as const,\n    icon: Loader2,\n    label: 'Processing',\n    color: 'text-blue-600'\n  },\n  ready: {\n    variant: 'default' as const,\n    icon: Check,\n    label: 'Ready',\n    color: 'text-green-600'\n  },\n  failed: {\n    variant: 'destructive' as const,\n    icon: AlertCircle,\n    label: 'Failed',\n    color: 'text-red-600'\n  }\n}\n\nexport const VideoCard = ({\n  video,\n  onClick,\n  onRetry,\n  className\n}: VideoCardProps) => {\n  // Extract and transform data from the Video object\n  const videoId = video.id\n  const title = video.title\n  const thumbnailUrl = video.thumbnailUrl\n  const channelName = video.channelName\n  const status = convertStatus(video.status)\n  const duration = formatDuration(video.duration)\n  const publishedAt = video.createdAt\n\n  const config = statusConfig[status]\n  const Icon = config.icon\n\n  const handleClick = () => {\n    onClick?.(videoId)\n  }\n\n  const formatDate = (dateString?: string | null) => {\n    if (!dateString) return ''\n    try {\n      return new Date(dateString).toLocaleDateString()\n    } catch {\n      return ''\n    }\n  }\n\n  // Helper function to check if a value is empty or null\n  const isEmpty = (value: string | null | undefined): boolean => {\n    return !value || value.trim() === ''\n  }\n\n  return (\n    <TooltipProvider>\n      <Card \n        className={cn(\n          'group cursor-pointer transition-all duration-200 hover:shadow-sm hover:bg-accent/50',\n          'border-border/50 hover:border-border',\n          className\n        )}\n        onClick={handleClick}\n      >\n        <CardContent className=\"p-3\">\n          <div className=\"flex gap-3\">\n            {/* Left side - Text content (70%) */}\n            <div className=\"flex-1 min-w-0 space-y-1\">\n              {/* Title */}\n              {!isEmpty(title) ? (\n                <Tooltip>\n                  <TooltipTrigger asChild>\n                    <h3 className=\"text-sm font-medium leading-tight truncate\">\n                      {title}\n                    </h3>\n                  </TooltipTrigger>\n                  <TooltipContent side=\"top\" className=\"max-w-xs\">\n                    <p>{title}</p>\n                  </TooltipContent>\n                </Tooltip>\n              ) : (\n                <Skeleton className=\"h-4 w-full\" />\n              )}\n\n              {/* Channel */}\n              <div className=\"flex items-center gap-2\">\n                <Avatar className=\"h-4 w-4\">\n                  <AvatarFallback className=\"text-xs\">\n                    {!isEmpty(channelName) ? channelName!.charAt(0).toUpperCase() : '?'}\n                  </AvatarFallback>\n                </Avatar>\n                {!isEmpty(channelName) ? (\n                  <span className=\"text-xs text-muted-foreground truncate\">\n                    {channelName}\n                  </span>\n                ) : (\n                  <Skeleton className=\"h-3 w-20\" />\n                )}\n              </div>\n\n              {/* Date */}\n              {!isEmpty(publishedAt) ? (\n                <span className=\"text-xs text-muted-foreground\">\n                  {formatDate(publishedAt)}\n                </span>\n              ) : (\n                <Skeleton className=\"h-3 w-16\" />\n              )}\n            </div>\n\n            {/* Right side - Thumbnail (30%) */}\n            <div className=\"flex-shrink-0 w-16\">\n              {/* Thumbnail */}\n              <div className=\"w-16 h-12 relative overflow-hidden rounded-md\">\n                {!isEmpty(thumbnailUrl) ? (\n                  <img\n                    src={thumbnailUrl!}\n                    alt={title || 'Video thumbnail'}\n                    className=\"w-full h-full object-cover\"\n                    loading=\"lazy\"\n                  />\n                ) : (\n                  <Skeleton className=\"w-full h-full\" />\n                )}\n                \n                {/* Status overlay - top right corner */}\n                <div className=\"absolute top-1 right-1\">\n                  {status === 'failed' && onRetry ? (\n                    <Button\n                      variant=\"ghost\"\n                      size=\"sm\"\n                      className=\"h-4 px-1 text-xs text-red-600 hover:text-red-700 hover:bg-red-50/80 backdrop-blur-sm flex items-center gap-1\"\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        onRetry(videoId)\n                      }}\n                    >\n                      Retry\n                      <Icon className=\"h-3 w-3\" />\n                    </Button>\n                  ) : (\n                    <Tooltip>\n                      <TooltipTrigger asChild>\n                        <div className={cn(\n                          'h-4 w-4 flex items-center justify-center rounded-full bg-black/50 backdrop-blur-sm',\n                          status === 'processing' && 'animate-pulse'\n                        )}>\n                          <Icon className={cn('h-2.5 w-2.5 text-white', (status === 'processing' || status === 'queued') && 'animate-spin')} />\n                        </div>\n                      </TooltipTrigger>\n                      <TooltipContent side=\"top\">\n                        <p>{config.label}</p>\n                      </TooltipContent>\n                    </Tooltip>\n                  )}\n                </div>\n                \n                {/* Duration overlay for ready videos */}\n                {!isEmpty(duration) && status === 'ready' && (\n                  <div className=\"absolute bottom-0 right-0 left-0 bg-black/70 text-white text-xs px-1 py-0.5 text-center\">\n                    {duration}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </CardContent>\n      </Card>\n    </TooltipProvider>\n  )\n}\n\n// Loading skeleton component\nexport const VideoCardSkeleton = ({ className }: { className?: string }) => {\n  return (\n    <Card className={cn('animate-pulse', className)}>\n      <CardContent className=\"p-3\">\n        <div className=\"flex gap-3\">\n          {/* Left side - Text content (70%) */}\n          <div className=\"flex-1 min-w-0 space-y-1\">\n            <Skeleton className=\"h-4 w-full\" />\n            <div className=\"flex items-center gap-2\">\n              <Skeleton className=\"h-4 w-4 rounded-full\" />\n              <Skeleton className=\"h-3 w-20\" />\n            </div>\n            <Skeleton className=\"h-3 w-16\" />\n          </div>\n          {/* Right side - Thumbnail and Status (30%) */}\n          <div className=\"flex-shrink-0 w-16 space-y-1\">\n            <Skeleton className=\"w-16 h-12 rounded-md\" />\n            <Skeleton className=\"h-5 w-full rounded-full\" />\n          </div>\n        </div>\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1836, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/VideoList.tsx"],"sourcesContent":["'use client'\n\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\nimport { VideoCard, VideoCardSkeleton } from './VideoCard'\nimport { Video as VideoIcon, Search } from 'lucide-react'\nimport { cn } from '@/lib/utils'\nimport { useMemo } from 'react'\nimport { Video } from '@/lib/supabase/types'\n\nexport interface VideoListProps {\n  videos: Video[]\n  isLoading?: boolean\n  onVideoClick?: (videoId: string) => void\n  onRetry?: (videoId: string) => void\n  className?: string\n  emptyStateMessage?: string\n  emptyStateDescription?: string\n}\n\nexport const VideoList = ({\n  videos,\n  isLoading = false,\n  onVideoClick,\n  onRetry,\n  className,\n  emptyStateMessage = 'No videos yet',\n  emptyStateDescription = 'Add videos to build your knowledge base'\n}: VideoListProps) => {\n  // Sort videos by date (newest first)\n  const sortedVideos = useMemo(() => {\n    return sortVideosByDate(videos, 'desc')\n  }, [videos])\n  // Show loading skeletons\n  if (isLoading) {\n    return (\n      <ScrollArea className={cn('flex-1', className)}>\n        <div className=\"space-y-4 p-4\">\n          {Array.from({ length: 3 }).map((_, index) => (\n            <VideoCardSkeleton key={index} />\n          ))}\n        </div>\n      </ScrollArea>\n    )\n  }\n\n  // Show empty state\n  if (videos.length === 0) {\n    return (\n      <ScrollArea className={cn('flex-1', className)}>\n        <div className=\"flex flex-col items-center justify-center h-full text-center px-4 py-8\">\n          <div className=\"mb-4\">\n            <VideoIcon className=\"h-12 w-12 text-muted-foreground/50\" />\n          </div>\n          <Alert className=\"max-w-sm border-none shadow-none\">\n            <Search className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-sm\">\n              <div className=\"font-medium mb-1\">{emptyStateMessage}</div>\n              <div className=\"text-xs text-muted-foreground\">\n                {emptyStateDescription}\n              </div>\n            </AlertDescription>\n          </Alert>\n        </div>\n      </ScrollArea>\n    )\n  }\n\n  // Show video list\n  return (\n    <ScrollArea className={cn('flex-1', className)}>\n      <div className=\"p-4\">\n        <div className=\"grid grid-cols-2 gap-3\">\n          {sortedVideos.map((video) => (\n            <VideoCard\n              key={video.id}\n              video={video}\n              onClick={onVideoClick}\n              onRetry={onRetry}\n            />\n          ))}\n        </div>\n      </div>\n    </ScrollArea>\n  )\n}\n\n// Utility function for sorting videos by date\nexport const sortVideosByDate = (\n  videos: Video[],\n  order: 'asc' | 'desc' = 'desc'\n): Video[] => {\n  return [...videos].sort((a, b) => {\n    const dateA = new Date(a.createdAt || 0).getTime()\n    const dateB = new Date(b.createdAt || 0).getTime()\n    return order === 'desc' ? dateB - dateA : dateA - dateB\n  })\n}\n"],"names":[],"mappings":";;;;;;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAPA;;;;;;;;AAoBO,MAAM,YAAY,CAAC,EACxB,MAAM,EACN,YAAY,KAAK,EACjB,YAAY,EACZ,OAAO,EACP,SAAS,EACT,oBAAoB,eAAe,EACnC,wBAAwB,yCAAyC,EAClD;IACf,qCAAqC;IACrC,MAAM,eAAe,IAAA,uXAAO,EAAC;QAC3B,OAAO,iBAAiB,QAAQ;IAClC,GAAG;QAAC;KAAO;IACX,yBAAyB;IACzB,IAAI,WAAW;QACb,qBACE,qZAAC,wJAAU;YAAC,WAAW,IAAA,yHAAE,EAAC,UAAU;sBAClC,cAAA,qZAAC;gBAAI,WAAU;0BACZ,MAAM,IAAI,CAAC;oBAAE,QAAQ;gBAAE,GAAG,GAAG,CAAC,CAAC,GAAG,sBACjC,qZAAC,oJAAiB,MAAM;;;;;;;;;;;;;;;IAKlC;IAEA,mBAAmB;IACnB,IAAI,OAAO,MAAM,KAAK,GAAG;QACvB,qBACE,qZAAC,wJAAU;YAAC,WAAW,IAAA,yHAAE,EAAC,UAAU;sBAClC,cAAA,qZAAC;gBAAI,WAAU;;kCACb,qZAAC;wBAAI,WAAU;kCACb,cAAA,qZAAC,iSAAS;4BAAC,WAAU;;;;;;;;;;;kCAEvB,qZAAC,0IAAK;wBAAC,WAAU;;0CACf,qZAAC,oSAAM;gCAAC,WAAU;;;;;;0CAClB,qZAAC,qJAAgB;gCAAC,WAAU;;kDAC1B,qZAAC;wCAAI,WAAU;kDAAoB;;;;;;kDACnC,qZAAC;wCAAI,WAAU;kDACZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAOf;IAEA,kBAAkB;IAClB,qBACE,qZAAC,wJAAU;QAAC,WAAW,IAAA,yHAAE,EAAC,UAAU;kBAClC,cAAA,qZAAC;YAAI,WAAU;sBACb,cAAA,qZAAC;gBAAI,WAAU;0BACZ,aAAa,GAAG,CAAC,CAAC,sBACjB,qZAAC,4IAAS;wBAER,OAAO;wBACP,SAAS;wBACT,SAAS;uBAHJ,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;AAU3B;AAGO,MAAM,mBAAmB,CAC9B,QACA,QAAwB,MAAM;IAE9B,OAAO;WAAI;KAAO,CAAC,IAAI,CAAC,CAAC,GAAG;QAC1B,MAAM,QAAQ,IAAI,KAAK,EAAE,SAAS,IAAI,GAAG,OAAO;QAChD,MAAM,QAAQ,IAAI,KAAK,EAAE,SAAS,IAAI,GAAG,OAAO;QAChD,OAAO,UAAU,SAAS,QAAQ,QAAQ,QAAQ;IACpD;AACF","debugId":null}},
    {"offset": {"line": 2008, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/hooks/useVideos.ts"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { supabase } from '@/lib/supabase/client'\nimport { Video } from '@/lib/supabase/types'\nimport { useAuth } from '@/contexts/AuthContext'\n\nexport function useVideos() {\n  const [videos, setVideos] = useState<Video[]>([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [error, setError] = useState<string | null>(null)\n  const { user } = useAuth()\n\n  useEffect(() => {\n    if (!user?.id) {\n      setVideos([])\n      setIsLoading(false)\n      return\n    }\n\n    // Initial fetch\n    const fetchVideos = async () => {\n      try {\n        setIsLoading(true)\n        setError(null)\n        const { data, error } = await supabase\n          .from('videos')\n          .select('*')\n          .eq('userId', user.id)\n          .order('createdAt', { ascending: false })\n        \n        if (error) throw error\n        setVideos(data || [])\n        console.log('Videos:', data)\n      } catch (err) {\n        console.error('Error fetching videos:', err)\n        setError(err instanceof Error ? err.message : 'Failed to fetch videos')\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    fetchVideos()\n\n    // Subscribe to real-time changes\n    const channel = supabase\n      .channel('video-changes')\n      .on(\n        'postgres_changes',\n        {\n          event: '*',\n          schema: 'public',\n          table: 'videos',\n          filter: `userId=eq.${user.id}`,\n        },\n        (payload) => {\n          console.log('Video change detected:', payload)\n          \n          if (payload.eventType === 'INSERT') {\n            setVideos((prev) => [payload.new as Video, ...prev])\n          }\n          if (payload.eventType === 'UPDATE') {\n            setVideos((prev) =>\n              prev.map((v) => (v.id === payload.new.id ? payload.new as Video : v))\n            )\n          }\n          if (payload.eventType === 'DELETE') {\n            setVideos((prev) => prev.filter((v) => v.id !== payload.old.id))\n          }\n        }\n      )\n      .subscribe((status) => {\n        if (status === 'SUBSCRIBED') {\n          console.log('Successfully subscribed to video changes')\n        } else if (status === 'CHANNEL_ERROR') {\n          console.error('Error subscribing to video changes')\n          setError('Failed to connect to real-time updates')\n        }\n      })\n\n    return () => {\n      supabase.removeChannel(channel)\n    }\n  }, [user?.id])\n\n  const refetch = async () => {\n    if (!user?.id) return\n    \n    try {\n      setIsLoading(true)\n      setError(null)\n      const { data, error } = await supabase\n        .from('videos')\n        .select('*')\n        .eq('userId', user.id)\n        .order('createdAt', { ascending: false })\n      \n      if (error) throw error\n      setVideos(data || [])\n    } catch (err) {\n      console.error('Error refetching videos:', err)\n      setError(err instanceof Error ? err.message : 'Failed to refetch videos')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  return {\n    videos,\n    isLoading,\n    error,\n    refetch\n  }\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;AAEO,SAAS;IACd,MAAM,CAAC,QAAQ,UAAU,GAAG,IAAA,wXAAQ,EAAU,EAAE;IAChD,MAAM,CAAC,WAAW,aAAa,GAAG,IAAA,wXAAQ,EAAC;IAC3C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,wXAAQ,EAAgB;IAClD,MAAM,EAAE,IAAI,EAAE,GAAG,IAAA,0IAAO;IAExB,IAAA,yXAAS,EAAC;QACR,IAAI,CAAC,MAAM,IAAI;YACb,UAAU,EAAE;YACZ,aAAa;YACb;QACF;QAEA,gBAAgB;QAChB,MAAM,cAAc;YAClB,IAAI;gBACF,aAAa;gBACb,SAAS;gBACT,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,4IAAQ,CACnC,IAAI,CAAC,UACL,MAAM,CAAC,KACP,EAAE,CAAC,UAAU,KAAK,EAAE,EACpB,KAAK,CAAC,aAAa;oBAAE,WAAW;gBAAM;gBAEzC,IAAI,OAAO,MAAM;gBACjB,UAAU,QAAQ,EAAE;gBACpB,QAAQ,GAAG,CAAC,WAAW;YACzB,EAAE,OAAO,KAAK;gBACZ,QAAQ,KAAK,CAAC,0BAA0B;gBACxC,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;YAChD,SAAU;gBACR,aAAa;YACf;QACF;QAEA;QAEA,iCAAiC;QACjC,MAAM,UAAU,4IAAQ,CACrB,OAAO,CAAC,iBACR,EAAE,CACD,oBACA;YACE,OAAO;YACP,QAAQ;YACR,OAAO;YACP,QAAQ,CAAC,UAAU,EAAE,KAAK,EAAE,EAAE;QAChC,GACA,CAAC;YACC,QAAQ,GAAG,CAAC,0BAA0B;YAEtC,IAAI,QAAQ,SAAS,KAAK,UAAU;gBAClC,UAAU,CAAC,OAAS;wBAAC,QAAQ,GAAG;2BAAc;qBAAK;YACrD;YACA,IAAI,QAAQ,SAAS,KAAK,UAAU;gBAClC,UAAU,CAAC,OACT,KAAK,GAAG,CAAC,CAAC,IAAO,EAAE,EAAE,KAAK,QAAQ,GAAG,CAAC,EAAE,GAAG,QAAQ,GAAG,GAAY;YAEtE;YACA,IAAI,QAAQ,SAAS,KAAK,UAAU;gBAClC,UAAU,CAAC,OAAS,KAAK,MAAM,CAAC,CAAC,IAAM,EAAE,EAAE,KAAK,QAAQ,GAAG,CAAC,EAAE;YAChE;QACF,GAED,SAAS,CAAC,CAAC;YACV,IAAI,WAAW,cAAc;gBAC3B,QAAQ,GAAG,CAAC;YACd,OAAO,IAAI,WAAW,iBAAiB;gBACrC,QAAQ,KAAK,CAAC;gBACd,SAAS;YACX;QACF;QAEF,OAAO;YACL,4IAAQ,CAAC,aAAa,CAAC;QACzB;IACF,GAAG;QAAC,MAAM;KAAG;IAEb,MAAM,UAAU;QACd,IAAI,CAAC,MAAM,IAAI;QAEf,IAAI;YACF,aAAa;YACb,SAAS;YACT,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,4IAAQ,CACnC,IAAI,CAAC,UACL,MAAM,CAAC,KACP,EAAE,CAAC,UAAU,KAAK,EAAE,EACpB,KAAK,CAAC,aAAa;gBAAE,WAAW;YAAM;YAEzC,IAAI,OAAO,MAAM;YACjB,UAAU,QAAQ,EAAE;QACtB,EAAE,OAAO,KAAK;YACZ,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,SAAS,eAAe,QAAQ,IAAI,OAAO,GAAG;QAChD,SAAU;YACR,aAAa;QACf;IACF;IAEA,OAAO;QACL;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 2110, "column": 0}, "map": {"version":3,"sources":["file:///home/ryounis/Documents/Rasan/youtube-gpt/src/components/KnowledgeBase.tsx"],"sourcesContent":["'use client'\n\nimport { useState } from 'react'\nimport { FileText, Folder, Video as VideoIcon, Calendar, Loader2, Cloud, ChevronLeft, ChevronRight } from 'lucide-react'\nimport { ScrollArea } from '@/components/ui/scroll-area'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { Separator } from '@/components/ui/separator'\nimport { Input } from '@/components/ui/input'\nimport { useToast } from '@/hooks/use-toast'\nimport { processYouTubeUrl } from '@/lib/youtube'\nimport { VideoList } from './VideoList'\nimport { useVideos } from '@/hooks/useVideos'\n\nexport const KnowledgeBase = () => {\n  const [urlInput, setUrlInput] = useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const [isCollapsed, setIsCollapsed] = useState(false)\n  const { toast } = useToast()\n\n  // Use the useVideos hook for real-time data\n  const { videos, isLoading, error } = useVideos()\n\n  const totalVideos = videos.length\n  const lastIngestion = videos.length > 0 \n    ? new Date(videos[0].createdAt || '').toLocaleDateString()\n    : 'Never'\n\n  // Handle video click\n  const handleVideoClick = (videoId: string) => {\n    console.log('Video clicked:', videoId)\n    // TODO: Implement video selection logic for chat context\n  }\n\n  // Handle video retry\n  const handleVideoRetry = (videoId: string) => {\n    console.log('Retry video:', videoId)\n    // TODO: Implement retry logic for failed videos\n    toast({\n      title: 'Retry Requested',\n      description: `Retrying processing for video ${videoId}`,\n    })\n  }\n\n  // Handle form submission\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault()\n    \n    if (!urlInput.trim()) {\n      toast({\n        title: 'Error',\n        description: 'Please enter a YouTube URL',\n        variant: 'destructive',\n      })\n      return\n    }\n\n    setIsSubmitting(true)\n    \n    try {\n      const result = await processYouTubeUrl(urlInput.trim())\n      \n      if (result.success) {\n        toast({\n          title: 'Success',\n          description: `YouTube ${result.type} submitted for processing! Video ID: ${result.data?.id}`,\n        })\n        // Reset form\n        setUrlInput('')\n      } else {\n        // Handle different error types with specific messages\n        let errorMessage = result.error || 'Failed to process URL'\n        \n        if (result.type === 'auth_required') {\n          errorMessage = 'Please sign in to add videos to your knowledge base'\n        } else if (result.type === 'auth_error') {\n          errorMessage = 'Authentication failed. Please sign in and try again'\n        } else if (result.type === 'processing_error') {\n          errorMessage = 'Failed to queue video for processing. Please try again'\n        }\n\n        toast({\n          title: 'Error',\n          description: errorMessage,\n          variant: 'destructive',\n        })\n      }\n    } catch (error) {\n      console.error('Error processing URL:', error)\n      toast({\n        title: 'Error',\n        description: 'An unexpected error occurred',\n        variant: 'destructive',\n      })\n    } finally {\n      setIsSubmitting(false)\n    }\n  }\n\n  return (\n    <div className={`flex h-screen flex-col border-l bg-card transition-all duration-300 ${\n      isCollapsed ? 'w-12' : 'w-[480px]'\n    }`}>\n      {/* Header */}\n      <div className=\"flex h-14 items-center border-b px-4\">\n        {!isCollapsed ? (\n          <>\n            <h2 className=\"text-sm font-semibold\">Knowledge Base</h2>\n            <div className=\"flex items-center gap-2 ml-auto\">\n              <Button variant=\"ghost\" size=\"sm\">\n                <Folder className=\"h-4 w-4\" />\n              </Button>\n              <Button \n                variant=\"ghost\" \n                size=\"sm\"\n                onClick={() => setIsCollapsed(!isCollapsed)}\n              >\n                <ChevronRight className=\"h-4 w-4\" />\n              </Button>\n            </div>\n          </>\n        ) : (\n          <div className=\"flex justify-center w-full\">\n            <Button \n              variant=\"ghost\" \n              size=\"sm\"\n              onClick={() => setIsCollapsed(!isCollapsed)}\n            >\n              <ChevronLeft className=\"h-4 w-4\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {/* Collapsible Content */}\n      {!isCollapsed && (\n        <>\n          {/* URL Input Form - Moved to top */}\n          <div className=\"border-b\">\n            <form onSubmit={handleSubmit} className=\"p-4\">\n              <div className=\"relative\">\n                <Input\n                  type=\"url\"\n                  placeholder=\"Paste YouTube video/channel URL\"\n                  value={urlInput}\n                  onChange={(e) => setUrlInput(e.target.value)}\n                  disabled={isSubmitting}\n                  className=\"w-full pr-12\"\n                />\n                <Button \n                  type=\"submit\" \n                  size=\"sm\"\n                  className=\"absolute right-1 top-1 h-8 w-8 p-0\" \n                  disabled={isSubmitting || !urlInput.trim()}\n                >\n                  {isSubmitting ? (\n                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                  ) : (\n                    <Cloud className=\"h-4 w-4\" />\n                  )}\n                </Button>\n              </div>\n            </form>\n          </div>\n          {/* Video List */}\n          <VideoList\n            videos={videos}\n            onVideoClick={handleVideoClick}\n            onRetry={handleVideoRetry}\n            isLoading={isLoading}\n          />\n\n          {/* Footer with Metrics */}\n          <div className=\"border-t\">\n            <div className=\"bg-muted/30 px-4 py-3\">\n              <div className=\"space-y-2 text-xs\">\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2 text-muted-foreground\">\n                    <VideoIcon className=\"h-3.5 w-3.5\" />\n                    <span>Total videos:</span>\n                  </div>\n                  <span className=\"font-medium text-foreground\">{totalVideos}</span>\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center gap-2 text-muted-foreground\">\n                    <Calendar className=\"h-3.5 w-3.5\" />\n                    <span>Last ingestion:</span>\n                  </div>\n                  <span className=\"font-medium text-foreground\">{lastIngestion}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}