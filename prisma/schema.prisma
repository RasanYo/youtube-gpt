generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// Video model - represents ingested YouTube videos
/// Each video belongs to a user and tracks processing status
/// userId references auth.users.id directly
model Video {
  id           String      @id @default(uuid())
  userId       String      // References auth.users.id directly
  youtubeId    String      @unique
  title        String
  thumbnailUrl String?
  channelName  String
  duration     Int
  status       VideoStatus @default(QUEUED)
  error        String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@index([userId])
  @@index([status])
  @@map("videos")
}

/// Conversation model - represents chat sessions
/// Each conversation belongs to a user and contains multiple messages
/// userId references auth.users.id directly
/// TODO: Add Message model in Phase 2 for chat history
model Conversation {
  id        String   @id @default(uuid())
  userId    String   // References auth.users.id directly
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userId])
  @@map("conversations")
}

/// Video processing status enum
/// - QUEUED: Video is queued for ingestion
/// - PROCESSING: Video is currently being processed (transcript extraction, embedding generation)
/// - READY: Video is ready for search and AI queries
/// - FAILED: Video processing failed (check error field)
enum VideoStatus {
  QUEUED
  PROCESSING
  READY
  FAILED
}
